Intel(R) VTune(TM) Profiler Command Line Tool
Copyright (C) 2009 Intel Corporation. All rights reserved.

 Usage: vtune <-action> [-action-option] [-global-option] [[--] target [target options]]
 
 Type 'vtune -help <action>' for help on a specific action.
 

Available Actions:
 
    collect        Choose an analysis type.
    collect-with   Choose a collector.
    command        Issue a command to a running collection.
    finalize       Re-finalize the result.
    help           Display help text.
    import         Create a result directory by importing one or more legacy data files/directories.
    report         Generate a report with the specified name.
    version        Display product version.


Additional Tools:
 
    Application Performance Snapshot
 
       Use Application Performance Snapshot to profile MPI-based applications and get MPI-specific performance insights.
       Type aps --help to see relevant options.
 
    VTune Profiler Server
 
       Use VTune Profiler Server to view collected results in a web browser for a better user experience compared to VNC or X-forwarding.
       Type vtune-backend --data-directory=/path/to/folder/with/collected/results.
 
    Self-checker Script
 
       This script checks if you have installed VTune Profiler correctly and ensures that it is ready for use.
       Type vtune-self-checker.sh to run this script.
 

Examples:
 
 1) Start with a performance snapshot. Get a quick overview of potential performance issues. Identify next steps for a deeper analysis:
 
    vtune -collect performance-snapshot a.out
 
 2) Run a hotspots collection (in user-mode sampling) on the specified target:
 
    vtune -collect hotspots a.out
 
 3) Run a hotspot collection (hardware event-based sampling) with non-default sampling interval 0.5 ms:
 
    vtune -collect hotspots -knob sampling-mode=hw -knob sampling-interval=0.5 a.out
 
 4) Generate the hotspots report for the 'r000hs' result directory:
 
    vtune -report hotspots -r r000hs
 
 5) Run microarchitecture exploration analysis as ‘vtune_user’ on a remote target with IP address 192.0.2.0:
 
    vtune -target-system ssh:vtune_user@192.0.2.0 -collect uarch-exploration a.out
 
 6) Profile system with memory access analysis for 20 seconds:
 
    vtune -collect memory-access -d 20
 
 7) Run gpu-hotspots collection on the process labeled PID 1234:
 
    vtune -collect gpu-hotspots -target-pid 1234
 
 8) Run HPC performance characterization analysis on MPI application 'a.out' executed with Intel MPI Launcher:
 
    mpirun -n 48 -ppn 24 vtune -collect hpc-performance -data-limit=0 -r my_result_dir a.out
 
 9) Show options for collect command:
 
    vtune -help collect
 
 10) Show options for threading analysis:
 
    vtune -help collect threading



-----------------------------------------



(LLM_OMP) cc@vtune-openmp:~/haibin/LLM_OpenMP$ vtune -help collect hotspots
Intel(R) VTune(TM) Profiler Command Line Tool
Copyright (C) 2009 Intel Corporation. All rights reserved.

 Identify the most time consuming functions and drill down to see time spent 
 on each line of source code. Focus optimization efforts on hot code for the 
 greatest performance impact.

 To modify the analysis type, use the configuration options (knobs) as
 follows:
 -collect hotspots -knob <knobName>=<knobValue>
 Multiple -knob options are allowed and can be followed by additional collect
 action options, as well as global options, if needed. 


sampling-mode

  User-Mode Sampling(sw) mode use for: profiles longer than a few seconds,
  profiling a single process or a process-tree, profiling Python and Intel
  runtimes. Hardware Event-Based Sampling(hw) mode use for: profiles shorter 
  than a few seconds, profiling all processes on a system, including kernel. 

  Default value: sw
  Possible values: sw hw 


sampling-interval

  Specify an interval (in milliseconds) between CPU samples for the Hardware 
  sampling mode. Sampling interval for the Software sampling mode is fixed
  (10ms).

  Default value: 5
  Possible values: numbers between 0.01 and 1000 


enable-stack-collection

  Enable collection of call stacks.

  Default value: false
  Possible values: true false


stack-size

  Specify the size of a raw stack (in bytes) to process. Zero value in
  command line means unlimited size. You may set arbitrary stack size value
  in the custom analysis configuration.

  Default value: 1024
  Possible values: 0 1024 2048 4096 


enable-characterization-insights

  Get additional performance insights such as the efficency of hardware usage
  and vectorization, and learn next steps. Note: this option collects CPU
  events in the counting mode.

  Default value: true
  Possible values: true false
